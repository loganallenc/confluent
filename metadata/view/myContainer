{
    "type": "Ext.Container",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "height": null,
        "id": null,
        "itemId": "myContainer",
        "width": null,
        "designer|userClassName": "myContainer",
        "designer|userAlias": "myContainer",
        "autoDestroy": false,
        "scrollable": [
            "{\r",
            "    direction: 'horizontal',\r",
            "    directionLock: true\r",
            "}"
        ]
    },
    "configAlternates": {
        "scrollable": "object"
    },
    "designerId": "9bc94066-7690-4c68-8866-c110d3b1b5d4",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "roomText",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "calendarId",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "Ext.draw.Component",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "events": [
                    "[]"
                ],
                "id": null,
                "itemId": "inlineDraw",
                "designer|displayName": "inlineDraw",
                "designer|createAlias": null,
                "autoDestroy": false
            },
            "configAlternates": {
                "events": "array",
                "onTap": "object"
            },
            "designerId": "8d99f194-3342-4a69-8f14-e28452945f67",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "backgroundColor",
                    "type": "string"
                },
                {
                    "group": "(Custom Properties)",
                    "name": "timelineColor",
                    "type": "string"
                },
                {
                    "group": "(Custom Properties)",
                    "name": "roomText",
                    "type": "string"
                },
                {
                    "group": "(Custom Properties)",
                    "name": "boxColor",
                    "type": "string"
                },
                {
                    "group": "(Custom Properties)",
                    "name": "events",
                    "type": "string"
                },
                {
                    "group": "(Custom Properties)",
                    "name": "dotColor",
                    "type": "string"
                }
            ],
            "cn": [
                {
                    "type": "basiceventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onContainerPainted",
                        "implHandler": [
                            "var me = this,\r",
                            "    backgroundColor = me.backgroundColor,\r",
                            "    timelineColor = me.timelineColor,\r",
                            "    roomText = me.roomText,\r",
                            "    boxColor = me.boxColor,\r",
                            "    dotColor = me.dotColor,\r",
                            "    events = me.events;\r",
                            "\r",
                            "var mainCarousel = Ext.ComponentQuery.query('#mainCarousel')[0],\r",
                            "    displace = Ext.getBody().getSize().width - 200,\r",
                            "    h = Ext.getBody().getSize().height,\r",
                            "    surface = this.getSurface('main'),\r",
                            "    today = new Date(Date.now()),\r",
                            "    w = 203 * events.length,\r",
                            "    description,\r",
                            "    dateTime,\r",
                            "    summary,\r",
                            "    yloc = h/10,\r",
                            "    xloc;\r",
                            "\r",
                            "me.setSize(w,h);\r",
                            "surface.setSize(w,h);\r",
                            "surface.setBackground(backgroundColor);\r",
                            "\r",
                            "//Line across screen\r",
                            "surface.add({\r",
                            "    type: 'rect',\r",
                            "    fill: timelineColor,\r",
                            "    height : 20,\r",
                            "    width: w,\r",
                            "    x: 0,\r",
                            "    y: yloc+330\r",
                            "}).show(true);\r",
                            "\r",
                            "//Name of room\r",
                            "surface.add({\r",
                            "    type: 'text',\r",
                            "    text: roomText,\r",
                            "    font: \"40px Arial\",\r",
                            "    fill: '#FFF',\r",
                            "    x: 35,\r",
                            "    y: 70\r",
                            "}).show(true);\r",
                            "\r",
                            "surface.add({\r",
                            "    type: 'rect',\r",
                            "    fill: backgroundColor,\r",
                            "    height : 100,\r",
                            "    width: 200,\r",
                            "    x: displace,\r",
                            "    y: 70\r",
                            "}).show(true);\r",
                            "\r",
                            "var addText = surface.add({\r",
                            "    type: 'text',\r",
                            "    text: '+add',\r",
                            "    font: \"36px Arial\",\r",
                            "    fill: '#FFF',\r",
                            "    x: displace,\r",
                            "    y: 70\r",
                            "}).show(true);\r",
                            "\r",
                            "for (var iter = 0; iter < events.length; iter++) {\r",
                            "    xloc = iter*200;\r",
                            "    summary = events[iter].summary;\r",
                            "    try {\r",
                            "        if (summary.length > 26) {\r",
                            "            summary = summary.substring(0,24) + '...';\r",
                            "        }\r",
                            "    } catch(e) {\r",
                            "        console.log(summary);\r",
                            "    }\r",
                            "\r",
                            "    description = events[iter].description;\r",
                            "    try {\r",
                            "        description = description.replace(/\\n/g, ' ');\r",
                            "        if (description.length > 35) {\r",
                            "            if (description.length > 70) {\r",
                            "                description = description.substring(0,35) + '\\n' + description.substring(35,70) + '...';\r",
                            "            } else {\r",
                            "                description = description.substring(0,35) + '\\n' + description.substring(35);\r",
                            "            }\r",
                            "        }\r",
                            "    } catch(e) {\r",
                            "        description = false;\r",
                            "    }\r",
                            "\r",
                            "    dateTime = events[iter].start.dateTime;\r",
                            "    dateTime = Date.parse(dateTime);\r",
                            "    dateTime = new Date(dateTime);\r",
                            "\r",
                            "    if ((dateTime.getDate() == today.getDate()) && (dateTime.getMonth() == today.getMonth())) {\r",
                            "        dateTime = dateTime.toTimeString().substring(0,5);\r",
                            "        if (parseInt(dateTime.substring(0,2),10) >= 12) {\r",
                            "            if (dateTime.substring(0,2) == '12') {\r",
                            "                dateTime = dateTime + ' pm';\r",
                            "            } else if ((parseInt(dateTime.substring(0,2),10)-12) < 10) {\r",
                            "                dateTime = '0' + (parseInt(dateTime.substring(0,2),10)-12) + dateTime.substring(2) + ' pm';\r",
                            "            } else {\r",
                            "                dateTime = (parseInt(dateTime.substring(0,2),10)-12) + dateTime.substring(2) + ' pm';\r",
                            "            }\r",
                            "        } else {\r",
                            "            if (dateTime.substring(0,1) == '0') {\r",
                            "                dateTime = '12' + dateTime.substring(2) + ' am';\r",
                            "            } else if (parseInt(dateTime.substring(0,2),10) < 10) {\r",
                            "                dateTime = '0' + dateTime + ' am';\r",
                            "            } else {\r",
                            "                dateTime = dateTime + ' am';\r",
                            "            }\r",
                            "        }\r",
                            "\r",
                            "    } else if (dateTime.getMonth() == today.getMonth()) {\r",
                            "        dateTime = dateTime.toDateString().substring(0,10);\r",
                            "    } else {\r",
                            "        dateTime = dateTime.toDateString().substring(0,10);\r",
                            "    }\r",
                            "\r",
                            "    //Larger Point on timeline\r",
                            "    surface.add({\r",
                            "        type: 'circle',\r",
                            "        cx: xloc+192,\r",
                            "        cy: yloc+338,\r",
                            "        r: 22,\r",
                            "        fillStyle: dotColor\r",
                            "    }).show(true);\r",
                            "\r",
                            "    surface.add({\r",
                            "        type: 'circle',\r",
                            "        cx: xloc+192,\r",
                            "        cy: yloc+338,\r",
                            "        r: 16,\r",
                            "        fillStyle: boxColor\r",
                            "    }).show(true);\r",
                            "\r",
                            "    if (iter % 2 === 0) {\r",
                            "        surface.add({\r",
                            "            type: 'rect',\r",
                            "            fill: boxColor,\r",
                            "            height: 160,\r",
                            "            width: 300,\r",
                            "            radius: 10,\r",
                            "            x: xloc+38,\r",
                            "            y: yloc+110\r",
                            "        }).show(true);\r",
                            "\r",
                            "        surface.add({\r",
                            "            type: 'path',\r",
                            "            path: 'M ' + (xloc+178) + ' ' + (yloc+270) + ' ' +\r",
                            "            'l ' + 25 + ' ' + 0 + ' ' +\r",
                            "            'l ' + -12 + ' ' + 10 + 'z',\r",
                            "            fillStyle: boxColor\r",
                            "        }).show(true);\r",
                            "\r",
                            "        surface.add({\r",
                            "            type: 'text',\r",
                            "            text: summary,\r",
                            "            font: '22px Arial',\r",
                            "            width: 290,\r",
                            "            height: 130,\r",
                            "            fill: '#FFF',\r",
                            "            x: xloc+48,\r",
                            "            y: yloc+135\r",
                            "        }).show(true);\r",
                            "\r",
                            "        if (description !== false) {\r",
                            "            surface.add({\r",
                            "                type: 'text',\r",
                            "                text: description,\r",
                            "                font: '16px Times New Roman',\r",
                            "                width: 280,\r",
                            "                height: 100,\r",
                            "                fill: '#FFF',\r",
                            "                x: xloc+48,\r",
                            "                y: yloc+190\r",
                            "            }).show(true);\r",
                            "        }\r",
                            "\r",
                            "        //Time and date for top\r",
                            "        surface.add({\r",
                            "            type: 'text',\r",
                            "            text: dateTime,\r",
                            "            font: '14px Arial',\r",
                            "            fill: '#FFF',\r",
                            "            x: xloc+165,\r",
                            "            y: yloc+380\r",
                            "        }).show(true);\r",
                            "\r",
                            "    } else {\r",
                            "\r",
                            "        surface.add({\r",
                            "            type: 'rect',\r",
                            "            fill: boxColor,\r",
                            "            height : 160,\r",
                            "            width: 300,\r",
                            "            radius: 10,\r",
                            "            x: xloc+38,\r",
                            "            y: yloc+410\r",
                            "        }).show(true);\r",
                            "\r",
                            "        surface.add({\r",
                            "            type: 'path',\r",
                            "            path: 'M ' + (xloc+203) + ' ' + (yloc+410) + ' ' +\r",
                            "            'l ' + -25 + ' ' + 0 + ' ' +\r",
                            "            'l ' + 12 + ' ' + -10 + 'z',\r",
                            "            fillStyle: boxColor\r",
                            "        }).show(true);\r",
                            "\r",
                            "        surface.add({\r",
                            "            type: 'text',\r",
                            "            text: summary,\r",
                            "            width: 290,\r",
                            "            height: 130,\r",
                            "            font: '22px Arial',\r",
                            "            fill: '#FFF',\r",
                            "            x: xloc+48,\r",
                            "            y: yloc+435\r",
                            "        }).show(true);\r",
                            "\r",
                            "        if (description !== false) {\r",
                            "            surface.add({\r",
                            "                type: 'text',\r",
                            "                text: description,\r",
                            "                font: '16px Times New Roman',\r",
                            "                width: 280,\r",
                            "                height: 100,\r",
                            "                fill: '#FFF',\r",
                            "                x: xloc+48,\r",
                            "                y: yloc+485\r",
                            "            }).show(true);\r",
                            "        }\r",
                            "\r",
                            "        //Time and date for bottom\r",
                            "        surface.add({\r",
                            "            type: 'text',\r",
                            "            text: dateTime,\r",
                            "            font: '14px Arial',\r",
                            "            fill: '#FFF',\r",
                            "            x: xloc+165,\r",
                            "            y: yloc+308\r",
                            "        }).show(true);\r",
                            "    }\r",
                            "}"
                        ],
                        "name": "painted"
                    },
                    "designerId": "abcefa17-cec1-4c64-bf5c-359acd1aefa6"
                },
                {
                    "type": "basiceventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onContainerResize",
                        "implHandler": [
                            "this.setSize(null, Ext.getBody().getSize().height);\r",
                            "this.getSurface('main').setSize(null, Ext.getBody().getSize().height);"
                        ],
                        "name": "resize"
                    },
                    "designerId": "2c8e79f0-064e-46cb-bd80-e0bea27bfa38"
                }
            ]
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initialize",
                "implHandler": [
                    "this.callParent();\r",
                    "\r",
                    "this.element.on({\r",
                    "    tap: this.onTap\r",
                    "});"
                ]
            },
            "designerId": "0795efd8-674a-4ad3-bdcc-1c6dd1a236bf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTap",
                "designer|params": [
                    "e"
                ],
                "implHandler": [
                    "if (e.pageY <= 70) {\r",
                    "    if (e.pageX >= Ext.getBody().getSize().width-200) {\r",
                    "        var form = new Conflux.view.MyFormPanel();\r",
                    "        Ext.Viewport.add(form);\r",
                    "    }\r",
                    "}"
                ]
            },
            "designerId": "9b5a0bad-2f07-4c81-aec3-703d381170f2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "reloadData",
                "implHandler": [
                    "var me = this,\r",
                    "    today = new Date(),\r",
                    "    mainCarousel,\r",
                    "    calendarId = me.calendarId,\r",
                    "    child;\r",
                    "\r",
                    "var token = Conflux.app.authToken,\r",
                    "    clientId = '464168127252.apps.googleusercontent.com',\r",
                    "    apiKey = 'AIzaSyAy7JAsd5JlzjTR_fkkarby9N1c3YkhY6o',\r",
                    "    scopes = 'https://www.googleapis.com/auth/calendar';\r",
                    "\r",
                    "gapi.client.setApiKey(apiKey);\r",
                    "gapi.auth.setToken(token);\r",
                    "\r",
                    "gapi.auth.authorize({client_id: clientId, scope: scopes, immediate: true},\r",
                    "function(authResult) {\r",
                    "    if (authResult) {\r",
                    "        gapi.client.load('calendar', 'v3', function() {\r",
                    "            var request = gapi.client.calendar.events.list({\r",
                    "                'calendarId': calendarId,\r",
                    "                'singleEvents': true,\r",
                    "                'orderBy': 'startTime',\r",
                    "                'timeMin': today,\r",
                    "                'maxResults': 50\r",
                    "            });\r",
                    "\r",
                    "            request.execute(function(resp) {\r",
                    "                child = me.query('#inlineDraw');\r",
                    "                child.events = resp.items;\r",
                    "                child.onContainerPainted();\r",
                    "            });\r",
                    "        });\r",
                    "    } else {\r",
                    "        window.location.reload();\r",
                    "    }\r",
                    "});"
                ]
            },
            "designerId": "d52b5bd1-8e4a-4312-a144-55a440c6cb12"
        }
    ]
}